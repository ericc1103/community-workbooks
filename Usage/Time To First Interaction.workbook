{
  "version": "Notebook/1.0",
  "isLocked": false,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Time to First Interaction\n---\nThis report helps you understand the time taken by customers to first interact with critical features of your app. It can help you uncover issues with discoverability of your features or the intuitiveness of your app's UI/flow."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "2006c356-d32b-4f16-a22c-6a76d0e84288",
            "version": "KqlParameterItem/1.0",
            "name": "Activities",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let mostUsedEvent = union customEvents, pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| top 3 by Count desc\n| summarize makelist(name);\nunion customEvents, pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| extend IsSelected = iff(name in (mostUsedEvent), true, false)\n| order by Count desc\n| project v = name, t = name, IsSelected\n| union (\ndatatable(v:string, t:string, IsSelected:boolean)[\n'*', 'All Events and Page Views', false\n]\n)"
          },
          {
            "id": "03ad1f6b-7d7c-4abc-8b8d-446621ad479e",
            "version": "KqlParameterItem/1.0",
            "name": "OtherFilters",
            "type": 1,
            "description": null,
            "isRequired": false,
            "value": ""
          },
          {
            "id": "815b8c50-0d4a-4374-a073-bc9394103aed",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(key:string, display:string) \n[ \n\"1h\", \"Last Hour\", \n\"1d\", \"Last 24 hours\", \n\"2d\", \"Last 48 hours\", \n\"3d\", \"Last 3 days\", \n\"7d\", \"Last 7 days\", \n\"14d\", \"Last 14 days\", \n\"30d\", \"Last 30 days\", \n\"60d\", \"Last 60 days\", \n\"90d\", \"Last 90 days\"\n] ",
            "value": "7d"
          },
          {
            "id": "9297ccee-f170-475e-a55a-40f46949e56e",
            "version": "KqlParameterItem/1.0",
            "name": "TimeFrom",
            "type": 2,
            "description": "For users, the first use is calculated as the first use within the time range. It is possible that the user started using your app before the time range.",
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\n'session_Id', 'Start of the Session',\n'user_Id', 'First use by Anonymous User ⚠️',\n'user_AuthenticatedId', 'First use by Authenticated User ⚠️',\n];",
            "value": "session_Id"
          }
        ]
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Overall Time to First Interation"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let allEvents = union customEvents, pageViews\n| where timestamp > ago({TimeRange});\nlet allInterestingEvents = allEvents\n| where name in ({Activities}) or '*' in ({Activities})\n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by {TimeFrom}\n| sample 100000\n| summarize makelist({TimeFrom}, 100000));\nlet sessionStart = allEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Start = min(timestamp) by {TimeFrom};\nlet firstInterestingEvent = allInterestingEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Interaction = min(timestamp) by {TimeFrom}, name;\nlet segmentedFirstInteraction = firstInterestingEvent\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start, name\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90) by name\n| extend o = Median\n| extend Mean = case(Mean / 1h > 1, strcat(round(Mean / 1h, 1), ' hour(s)'),\n                     Mean / 1m > 1, strcat(round(Mean / 1m, 1), ' minutes(s)'), \n                     strcat(round(Mean / 1m, 1), ' second(s)'))\n| extend Median = case(Median / 1h > 1, strcat(round(Median / 1h, 1), ' hour(s)'),\n                     Median / 1m > 1, strcat(round(Median / 1m, 1), ' minutes(s)'), \n                     strcat(round(Median / 1m, 1), ' second(s)'))\n| extend p75 = case(p75 / 1h > 1, strcat(round(p75 / 1h, 1), ' hour(s)'),\n                     p75 / 1m > 1, strcat(round(p75 / 1m, 1), ' minutes(s)'), \n                     strcat(round(p75 / 1m, 1), ' second(s)'))\n| extend p90 = case(p90 / 1h > 1, strcat(round(p90 / 1h, 1), ' hour(s)'),\n                     p90 / 1m > 1, strcat(round(p90 / 1m, 1), ' minutes(s)'), \n                     strcat(round(p90 / 1m, 1), ' second(s)'))\n| extend name = strcat('🔷 ', name);\nsegmentedFirstInteraction\n| union (firstInterestingEvent\n| summarize Interaction = min(Interaction) by {TimeFrom}\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90)\n| extend Mean = case(Mean / 1h > 1, strcat(round(Mean / 1h, 1), ' hour(s)'),\n                     Mean / 1m > 1, strcat(round(Mean / 1m, 1), ' minutes(s)'), \n                     strcat(round(Mean / 1m, 1), ' second(s)'))\n| extend Median = case(Median / 1h > 1, strcat(round(Median / 1h, 1), ' hour(s)'),\n                     Median / 1m > 1, strcat(round(Median / 1m, 1), ' minutes(s)'), \n                     strcat(round(Median / 1m, 1), ' second(s)'))\n| extend p75 = case(p75 / 1h > 1, strcat(round(p75 / 1h, 1), ' hour(s)'),\n                     p75 / 1m > 1, strcat(round(p75 / 1m, 1), ' minutes(s)'), \n                     strcat(round(p75 / 1m, 1), ' second(s)'))\n| extend p90 = case(p90 / 1h > 1, strcat(round(p90 / 1h, 1), ' hour(s)'),\n                     p90 / 1m > 1, strcat(round(p90 / 1m, 1), ' minutes(s)'), \n                     strcat(round(p90 / 1m, 1), ' second(s)'))\n| extend name = '🔶 Overall', o = 0m)\n| order by o asc, Median asc, Sessions desc\n| project name, Count = Sessions, Median, p75, p90, Mean\n",
        "showQuery": false,
        "size": 1,
        "aggregation": 0,
        "showAnnotations": false,
        "visualization": "table"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    }
  ]
}