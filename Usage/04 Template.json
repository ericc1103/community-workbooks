{"version":"Notebook/1.0","items":[{"type":1,"content":"{\"json\":\"## autocluster in search in the portal\\n---\\n\\n### step 1: prove that autocluster queries only occur from search if the autocluster flight is enabled\\n(note: usage is also using autocluster and doesn't use its own distinct query name, so those blades are specifically excluded.  the only part that should appear here is search, and only with value of \\\"true\\\" for the flight)\\n\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// find all DraftAutoclusterQuery Ajax query calls that did NOT come from usage\\r\\n// which ocurred after Flight_ telemetry was added and StagedExposureState was removed\\r\\n// TODO: add distinct name for autocluster from usage blades\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName == \\\"DraftAutoclusterQuery\\\"\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName !in (\\\"UsageSessionsBlade\\\", \\\"UsageUsersBlade\\\", \\\"UsageEventsBlade\\\", \\\"UsageCohortsBlade\\\", \\\"UsageSegmentationBlade\\\", \\\"UsageNotebookBlade\\\")\\r\\n| summarize count() by searchAutoClusterEnabled, queryName, containerName\",\"showQuery\":false,\"size\":1}"},{"type":1,"content":"{\"json\":\"### what is the flight percentage for `searchAutoClusterEnabled`\\nwe can see the approximate percentage of flighting of autocluster in search by looking at the `Flight_searchAutoclusterEnabled` value on the `DraftSearchTimelineQuery` telemetry, which occurs every time a search runs.\\n\\nwhen this was written, you could easily see that this query is 20:1 false:true, so appears to be flighted at 5% at that time.\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// guess the distribution of what the flight setting is\\r\\n// when written, you could easily see that this query is 20:1 false:true, so appears to be flighted at 5%\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName == \\\"DraftSearchTimelineQuery\\\"\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName == \\\"SearchControlPart\\\"\\r\\n| where isnotempty(searchAutoClusterEnabled)\\r\\n| extend searchAutoClusterEnabled = iff(searchAutoClusterEnabled == \\\"true\\\", \\\"With Autocluster\\\", \\\"NO Autocluster\\\" )\\r\\n| summarize count() by searchAutoClusterEnabled, bin(timestamp, 1d)\",\"showQuery\":false,\"size\":1,\"visualization\":\"timechart\"}"},{"type":1,"content":"{\"json\":\"if the above is true, we can simplify the query to explicitly include only `SearchControlPart` instead of excluding all the usage blades.\\n\\n### does autocluster make search slower?\\n\\nthe auto cluster queries that occur with search occur AFTER 2 other queries have started:\\n\\n1. `DraftSearchResultsQuery` - the query that gets the actual results\\n2. `DraftSearchTimelineQuery` - the query that populates the timeline and counts\\n\\nIn fact, the `DraftAutoclusterQuery` query requires the *results* of `DraftSearchTimelineQuery` in order to decide how many autocluster queries to execute, so autocluster can't start until the timeline has returned.\\n\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// compare the duration at 95th percentile of DraftSearchResults queries in the flighted and not flighted groups\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName == \\\"DraftSearchResultsQuery\\\"\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName == \\\"SearchControlPart\\\" and isnotempty(searchAutoClusterEnabled)\\r\\n| extend duration = todouble(customMeasurements.duration)/1000 // convert to seconds\\r\\n| extend searchAutoClusterEnabled = iff(searchAutoClusterEnabled == \\\"true\\\", \\\"With Autocluster\\\", \\\"NO Autocluster\\\" )\\r\\n| summarize count(), duration_seconds_95th = percentiles(duration, 95) by searchAutoClusterEnabled\",\"showQuery\":false,\"size\":1}"},{"type":1,"content":"{\"json\":\"When written, the data in the grid above showed that when autocluster was enabled, search results queries take ~4.5 seconds vs 5.5 seconds with autocluster turned off.  \\n\\nSo for the people with autocluster *enabled*, they're seeing faster results.\\n\\nThere are several factors that aren't accounted for, though, as it isn't the same queries against the same data using the same settings.\\n\\n### So find a resource that has many users of search\\nin general, that will be  the default settings of search against the same data for all those users.\\n*but unfortunately*, at 20:1 flighting, there's generally nobody using prod against insightsportal-prod that ends up in the flight.\\n\\n(as of this writing, there were only 68 queries, all without autocluster, with a 95th percentile duration of **46 seconds**.  ouch.)\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// compare the duration at 95th percentile of DraftSearchResults queries in the flighted and not flighted groups\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName == \\\"DraftSearchResultsQuery\\\"\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName == \\\"SearchControlPart\\\" and isnotempty(searchAutoClusterEnabled)\\r\\n| extend appId = tostring(customDimensions.Application_ID_V2)\\r\\n| where isnotempty(appId)\\r\\n| extend searchAutoClusterEnabled = iff(searchAutoClusterEnabled == \\\"true\\\", \\\"With Autocluster\\\", \\\"NO Autocluster\\\" )\\r\\n| summarize distinctUsers = dcount(user_Id), numberOfSearches=count()  by appId\\r\\n| top 3 by distinctUsers\",\"showQuery\":false,\"size\":1}"},{"type":1,"content":"{\"json\":\"a `fabrikamprod` (demo?) resource seems to do a lot of searches by a lot of users, so we'll use that one.\\nhopefully it has enough users to get at least 1 flighted into each flight.\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// compare the duration at 95th percentile of DraftSearchResults queries in the flighted and not flighted groups\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName == \\\"DraftSearchResultsQuery\\\"\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName == \\\"SearchControlPart\\\" and isnotempty(searchAutoClusterEnabled)\\r\\n| extend appId = tostring(customDimensions.Application_ID_V2)\\r\\n| where appId == \\\"53022b0d-29fc-4148-b727-19bbc6cf3666fabrikamprod\\\"\\r\\n| extend duration = todouble(customMeasurements.duration)/1000 // convert to seconds\\r\\n| extend searchAutoClusterEnabled = iff(searchAutoClusterEnabled == \\\"true\\\", \\\"With Autocluster\\\", \\\"NO Autocluster\\\" )\\r\\n| summarize numberOfSearches=count(), duration_seconds_95th = percentiles(duration, 95) by searchAutoClusterEnabled\",\"showQuery\":false,\"size\":1}"},{"type":1,"content":"{\"json\":\"When written, the data in the grid above showed that when autocluster was enabled, search results queries take ~2.3 seconds vs 2.0 seconds with autocluster turned off.\\n\\nSo in this specific case, it would appear that the `DraftSearchResultsQuery` is somehow slower when autocluster is turned on?  this could be cause by specific searches that were done in this app during the time period?\\n\\n(todo: dig into this and see if i can get the details of event types+etc from these queries?)\\n\\n## does it seem slower?\\n\\nSince the autocluster queries don't start until after the results and timeline queries start, what about *perceived* slowness? it might be that search results appear, and then a second later, the autocluster results pop in above them?\\n\\nfor this, you'd have to try to compare search results durations with timeline + autocluster queries.\\n\\n### try to simulate perceived slowness\\n\\nfor this, we compare the average search results duration (across all searches) with the average of the sum of the timeline query and the autocluster query, grouped first by session, since there's no way to find just the search+timeline+autocluster for a single \\\"search\\\" event.\\n\"}"},{"type":3,"content":"{\"version\":\"KqlItem/1.0\",\"query\":\"// compare the duration at 95th percentile of DraftSearchResults queries in the flighted and not flighted groups\\r\\ncustomEvents\\r\\n| where timestamp >= datetime(\\\"2017-05-03\\\") // first day where there's this kind of \\\"Flight_\\\" telemetry\\r\\n| where name == \\\"Ajax query\\\"\\r\\n| extend queryName = tostring(customDimensions.QueryName)\\r\\n| where queryName in (\\\"DraftSearchResultsQuery\\\", \\\"DraftSearchTimelineQuery\\\", \\\"DraftAutoclusterQuery\\\")\\r\\n| extend searchAutoClusterEnabled = tostring(customDimensions.Flight_searchAutoclusterEnabled)\\r\\n| where isempty(tostring(customDimensions.StagedExposureState)) // exclude old data with stagedexposurestate set\\r\\n| extend containerName = tostring(customDimensions.PartName)\\r\\n| where containerName == \\\"SearchControlPart\\\" and isnotempty(searchAutoClusterEnabled)\\r\\n| extend duration = todouble(customMeasurements.duration)/1000 // convert to seconds\\r\\n// turn each duration into its own column\\r\\n| extend searchDuration = iff(queryName == \\\"DraftSearchResultsQuery\\\", duration, 0.0)\\r\\n| extend timelineDuration = iff(queryName == \\\"DraftSearchTimelineQuery\\\", duration, 0.0)\\r\\n| extend autoclusterDuration = iff(queryName == \\\"DraftAutoclusterQuery\\\", duration, 0.0)\\r\\n| extend searchAutoClusterEnabled = iff(searchAutoClusterEnabled == \\\"true\\\", \\\"With Autocluster\\\", \\\"NO Autocluster\\\" )\\r\\n// do 95th percentile of those by session, since there's no way to group by each distinct search event\\r\\n| summarize averageSearch = percentiles(searchDuration, 95), timelineAndAutocluster = percentiles(timelineDuration+autoclusterDuration, 95) by searchAutoClusterEnabled, session_Id\\r\\n// then average across the 2 groups\\r\\n| summarize averageSearch = avg(averageSearch), timelineAndAutocluster = avg(timelineAndAutocluster) by searchAutoClusterEnabled\\r\\n\",\"showQuery\":false,\"size\":2}"},{"type":1,"content":"{\"json\":\"When written, the data in the grid above showed that \\n* when autocluster was enabled, search results  queries take ~3.7 seconds and the timeline query takes 3.1 seconds.\\n* when autocluster is disabled, search results  queries take ~8 seconds and the timeline query takes 6.1 seconds.\\n\\nSo again, for the people with autocluster enabled, they seem to be both the timeline and the cluster appear before the search results.\\n\"}"}]}